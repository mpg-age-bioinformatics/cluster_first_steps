#!/bin/sh
#SBATCH --time=08:00:00
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=4
#SBATCH --mem=8192
#SBATCH --output=jupyternb.job.%j

JUPYTERNB_IMAGE="/nexus/posix0/MAGE-flaski/service/images/rw_jupyter_ubuntu2204.sif"

# Create temporary directory to be populated with directories to bind-mount in the container
# where writable file systems are necessary. Adjust path as appropriate for your computing environment.
mkdir -p ~/.jupyternb-age/tmp
workdir=$(python3 -c 'import tempfile; import os; HOME=os.getenv("HOME"); print(tempfile.mkdtemp(prefix=f"{HOME}/.jupyternb-age/tmp/"))')

# echo $workdir

mkdir -p -m 700 ${workdir}/run ${workdir}/tmp

export APPTAINER_BIND="${workdir}/run:/run,${workdir}/tmp:/tmp"

export APPTAINERENV_USER=$(id -un) 
export APPTAINERENV_NBTOKEN=$(openssl rand -base64 15)

# get unused socket per https://unix.stackexchange.com/a/132524
# tiny race condition between the python & singularity commands
readonly PORT=$(python3 -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()')

NODEIP=$(hostname -I | grep -Eo '192\.168\.42\.[0-9]+')

cat 1>&2 <<END

ATTENTION: Jupyter only provides unencrypted HTTP access.

1. Run from local computer: ssh -N -L 8888:${NODEIP}:${PORT} -J ${APPTAINERENV_USER}@raven.mpcdf.mpg.de ${APPTAINERENV_USER}@hpc.bioinformatics.studio
   and point your web browser to http://127.0.0.1:8888/?token=${APPTAINERENV_NBTOKEN}

When done using Jupyter Notebook, terminate the job by:

1. End the ssh port tunneling from the local computer terminal
END

if [ "${SLURM_JOB_ID}" = "" ] ; then
cat 1>&2 <<END   
      
END
else
cat 1>&2 <<END

2. Issue the following command on the login node:

      scancel -f ${SLURM_JOB_ID}
      
END
fi

singularity exec --cleanenv ${JUPYTERNB_IMAGE} \
    jupyter notebook --no-browser \
        --ip=0.0.0.0 \
        --NotebookApp.token=${APPTAINERENV_NBTOKEN} \
        --port=${PORT} >/dev/null 2>&1

printf 'rserver exited' 1>&2